include "decls.vad"

#verbatim
include "../code/vale.dfy"
include "../spec/rsa_ops.dfy"
include "../gen/decls.dfy"

import opened bv_ops
import opened vt_ops
import opened vt_consts
import opened vt_vale
import opened vt_decls

#endverbatim

procedure double()
    requires
        x2 + x2 < 0x1_0000_0000;
    ensures
        x2 = old(x2) + old(x2);
    modifies
        x2;
{
    add(x2, x2, x2);
}

procedure double_reg(inout dst:reg32, in src:reg32)
    requires
        src + src < 0x1_0000_0000;
    ensures
        dst = old(src) + old(src);
{
    add(dst, src, src);
}

procedure loop_imm(inout dst:reg32)
    requires
        dst == 0;
    modifies
        fgroups;
    ensures
        dst == 6;
{
    while (LoopImm(3))
        invariant dst == (3 - loop_ctr) * 2;
        decreases loop_ctr;
    {
        addi(dst, dst, 2);
    }
}

procedure loop_reg(inout dst:reg32, in cnt:reg32)
    requires
        dst == 0;
        cnt == 3;
    modifies
        fgroups;
    ensures
        dst == 6;
{
    while (Loop(cnt))
        invariant dst == (3 - loop_ctr) * 2;
        decreases loop_ctr;
    {
        addi(dst, dst, 2);
    }
}

procedure copy()
    requires
        xmem_addr_valid(xmem, x0 + 0);
        xmem_addr_valid(xmem, x0 + 4);
    reads
        x0;
    ensures
        xmem_addr_valid(xmem, x0 + 0);
        xmem_addr_valid(xmem, x0 + 4);
        xmem == old(xmem[x0 + 4 := xmem[x0 + 0]]);
    modifies
        xmem; x2;
{
    lw(x2, 0, x0);
    sw(x2, 4, x0);
}
