type seq(a: Type(0)): Type(0) {: primitive} extern;
function operator([]) #[a: Type(0)](s: seq(a), i: int): a extern;
function operator([ := ]) #[a: Type(0)](s: seq(a), i: int, v: a): seq(a) extern;
function operator([ .. ]) #[a: Type(0)](s: seq(a), begin: int, end: int): seq(a) extern;
function seq_len #[a: Type(0)] (s: seq(a)): nat extern;
function seq_concat #[a: Type(0)](x: seq(a), y: seq(a)): seq(a) extern;
function seq_append #[a: Type(0)](xs: seq(a), x: a): seq(a) extern;

type map(a: Type(0), b: Type(0)): Type(0) extern;
function operator(?[]) #[a:Type(0), b:Type(0)](m:map(a, b), rsa:a):bool extern;
function operator([]) #[a: Type(0), b: Type(0)](m: map(a, b), rsa: a): b extern;
function operator([ := ]) #[a: Type(0), b: Type(0)](m: map(a, b), rsa: a, v: b): map(a, b) extern;

type set(a: Type(0)): Type(0) {: primitive} extern;
function operator(?[]) #[a:Type(0)](m:set(a), i:a):bool extern;
function set_len #[a: Type(0)] (s: set(a)): nat extern;

function fst #[a: Type(0), b: Type(0)](m: tuple(a, b)): a extern;
function snd #[a: Type(0), b: Type(0)](m: tuple(a, b)): b extern;

type nat:     Type(0) := int_range(0, _);
type uint1:   Type(0) := int_range(0, 1);
type uint2:   Type(0) := int_range(0, 3);
type uint4:   Type(0) := int_range(0, 16);
type uint5:   Type(0) := int_range(0, 31);
type uint8:   Type(0) := int_range(0, 256);
type uint10:  Type(0) := int_range(0, 1024);
type uint12:  Type(0) := int_range(0, 4096);
type uint16:  Type(0) := int_range(0, 0xffff);
type uint32:  Type(0) := int_range(0, 0xffffffff);
type uint64:  Type(0) := int_range(0, 0xffffffff_ffffffff);
type uint128: Type(0) := int_range(0, 0xffffffff_ffffffff_ffffffff_ffffffff);
type uint256: Type(0) := int_range(0, 0xffffffff_ffffffff_ffffffff_ffffffff_ffffffff_ffffffff_ffffffff_ffffffff_ffffffff);

type int10:  Type(0) := int_range((-512), 512);
type int12:  Type(0) := int_range((-2048), 2048);
type int16:  Type(0) := int_range((-32768), 32767);
type int32:  Type(0) := int_range((-0x80000000), 0x7fffffff);
type int64:  Type(0) := int_range((-0x80000000_00000000), 0x7fffffff_ffffffff);

const BASE_16:  nat extern;
const BASE_32:  nat extern;
const BASE_64:  nat extern;
const BASE_128: nat extern;
const BASE_256: nat extern;
const BASE_512: nat extern;
const NUM_WORDS:nat extern;

const BASE_31:  int extern;
const BASE_63:  int extern;

type string: Type(0) extern;
